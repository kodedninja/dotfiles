#!/usr/bin/env node

var kindlequotes = require('kindlequotes')
var fs = require('fs')

var args = process.argv.slice(2)
var input = args[0]
var output = args[1]

var valueCache = new Set()
var newCounter = 0

var fromHili = fs.readFileSync(output, 'utf8')
	.split('\n')
	.filter(line => line)
	.map(function (line) {
    var quote = JSON.parse(line)
		valueCache.add(hash(quote))
		return quote
})

var fromKindle = kindlequotes(fs.readFileSync(input, 'utf8'))
	.map(function (kindleQuote) {
  	if (kindleQuote.content && kindleQuote.title && kindleQuote.date) {
			var title = kindleQuote.authors[0] ?
				kindleQuote.authors[0] + ' - ' + kindleQuote.title :
				kindleQuote.title

    	return {
				href: title.toLowerCase(),
    		title: title,
    		time: new Date(kindleQuote.date).getTime(),
    		text: kindleQuote.content,
    		html: kindleQuote.content,
				tags: [ 'book' ]
    	}
  	}
	})
	.filter(function (quote) {
		return quote && !valueCache.has(hash(quote))
})

for (var i = 0; i < fromKindle.length; i++) {
	var newOne = fromKindle[i]

	for (var j = 0; j < fromHili.length; j++) {
		if (newOne.time >= fromHili[j].time) {
			fromHili.splice(j + 1, 0, newOne)
			newCounter++
			break
		}
	}
}

var outputStream = fs.createWriteStream(output)

fromHili.map(function (quote) {
	outputStream.write(JSON.stringify(quote) + '\n')
})

outputStream.on('finish', function () {
	console.log(`Added ${newCounter} highlights from Kindle to hili.`)
})

outputStream.close()

function hash(quote) {
	return `${quote.time}#${quote.content}`
}
